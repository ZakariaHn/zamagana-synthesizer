{"version":3,"sources":["components/Zkeys.js","components/controlers/ZOctaveController.js","components/controlers/ZreleaseControler.js","components/controlers/ZvolumeController.js","components/controlers/ZwaveFormController.js","components/controlers/ZreverbController.js","components/controlers/ZdelayController.js","components/controlers/evnelop_Controllers/ZenvelopController.js","components/controlers/ZvibratoController.js","components/controlers/ZphaserController.js","components/controlers/Zcontrols.js","components/Zsynth.js","App.js","index.js"],"names":["Zkeys","props","zOct","zNotes","zRel","zsynth","play","note","Tone","octavedNote","triggerAttackRelease","renderSynthKeys","map","key","className","color","id","onMouseDown","keyboardKey","keyboardHandler","handleKeys","onKeyEvent","obj","ZOctaveController","setZoct","type","min","max","value","onChange","e","target","console","log","ZReleaseController","setZrel","step","ZvolumeControler","zVol","setZvol","ZwaveFormController","setZosc","ZreverbController","zRev","setZrev","roomSize","ZdelayController","zDel","setZdel","feedback","ZenvelopControllers","zEnv","setZenv","attack","decay","sustain","release","onClick","ZvibratoController","zVib","setZvib","depth","ZphaserController","zPhs","setZphs","stages","Zcontrols","zDefault","setZdefault","modalIsOpen","setModalOpen","ZenvelopController","Zsynth","zOsc","zDelay","maxDelay","toMaster","zReverb","Zphaser","frequency","octaves","Q","baseFrequency","Zvibrato","volume","oscillator","envelope","chain","octave","reverb","delay","vibrato","phaser","App","Zdefault","envelop","useState","notes","setZnotes","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4256b70.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Tone from \"tone\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\"; // A component from React to handle keyboard Keys\n\nconst Zkeys = (props) => {\n  const { zOct, zNotes, zRel, zsynth } = props;\n\n  // This function initiate the note to be played by applying the Tone.js methouds (.start() & .triggerAttackRelease())\n\n  const play = (note) => {\n    Tone.start();\n    const octavedNote = note + zOct;\n    zsynth.triggerAttackRelease(octavedNote, zRel);\n  };\n\n  /*\n    applying .map() method on zNotes( which represents note.json) \n    and rendering the synth keys and setting it's class based on the data entered there.\n */\n\n  let style = { color: \"red\", fontWeight: \"bold\" };\n  const CminorScale = [\"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\"];\n  const renderSynthKeys = zNotes.map((key) => (\n    <div\n      className={key.color}\n      id={key.id}\n      key={key.id}\n      onMouseDown={() => play(key.note)}\n      // style={CminorScale.includes(key.note) ? style : key}\n    >\n      {key.keyboardKey}\n    </div>\n  ));\n\n  /*\n   using the react component \"KeyboardEventHandler\"\n   and mapping again on Znotes in order to assign the keyboard keys that'll trigger the synth keys\n */\n  const keyboardHandler = (\n    <KeyboardEventHandler\n      handleKeys={[\"A\", \"W\", \"D\", \"R\", \"F\", \"G\", \"Y\", \"H\", \"U\", \"J\", \"I\", \"K\"]}\n      onKeyEvent={(key) =>\n        zNotes.map((obj) => {\n          if (key === obj.keyboardKey) {\n            play(obj.note);\n          }\n        })\n      }\n    />\n  );\n\n  return (\n    <div>\n      <div className=\"set\">\n        {renderSynthKeys}\n        {keyboardHandler}\n      </div>\n    </div>\n  );\n};\n\nexport default Zkeys;\n","import React, { Fragment } from \"react\";\n\nconst ZOctaveController = (props) => {\n  const { zOct, setZoct } = props;\n\n  const handaleOctave = (e) => {\n    setZoct(e.target.value);\n    console.log(zOct);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"octave control\">\n        <p>Octave</p>\n        <input\n          type=\"range\"\n          min={0}\n          max={2}\n          value={zOct}\n          onChange={handaleOctave}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZOctaveController;\n","import React, { Fragment } from \"react\";\nconst ZReleaseController = (props) => {\n  const { zRel, setZrel } = props;\n\n  const handleRelease = (e) => {\n    setZrel(e.target.value);\n  };\n  return (\n    <Fragment>\n      <div className=\"release control\">\n        <p>Release</p>\n        <input\n          type=\"range\"\n          min={0.1}\n          max={1}\n          value={zRel}\n          onChange={handleRelease}\n          step=\"0.1\"\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZReleaseController;\n","import React, { Fragment } from \"react\";\n\nconst ZvolumeControler = (props) => {\n  const handaleVolume = (e) => {\n    props.setZvol(e.target.value);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"volume control\" id=\"vol\">\n        <p>Volume</p>\n        <input\n          type=\"range\"\n          min={-10}\n          max={40}\n          value={props.zVol}\n          onChange={handaleVolume}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZvolumeControler;\n","import React from \"react\";\n\nconst ZwaveFormController = (props) => {\n  return (\n    <div className=\"waveForm control\">\n      <select onChange={(e) => props.setZosc(e.target.value)}>\n        <option value=\"sine\">Sine</option>\n        <option value=\"square\">Square</option>\n        <option value=\"triangle\">Triangle</option>\n        <option value=\"sawtooth\">Sawtooth</option>\n      </select>\n    </div>\n  );\n};\n\nexport default ZwaveFormController;\n","import React, { Fragment } from \"react\";\n\nconst ZreverbController = (props) => {\n  const { zRev, setZrev } = props;\n\n  const handleReverb = (e) => {\n    setZrev({ ...zRev, roomSize: e.target.value });\n  };\n  return (\n    <Fragment>\n      <div className=\"reverb control\">\n        <p>Reverb</p>\n        <input\n          type=\"range\"\n          min={0}\n          max={1}\n          value={zRev.roomSize}\n          onChange={handleReverb}\n          step=\"0.1\"\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZreverbController;\n","import React, { Fragment } from \"react\";\n\nconst ZdelayController = (props) => {\n  const { zDel, setZdel } = props;\n  const handleDelay = (e) => {\n    setZdel({ ...zDel, feedback: e.target.value });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"delay control\">\n        <p>Delay</p>\n        <input\n          type=\"range\"\n          min={0}\n          max={1}\n          value={zDel.feedback}\n          onChange={handleDelay}\n          step=\"0.1\"\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZdelayController;\n","import React from \"react\";\n\nconst ZenvelopControllers = (props) => {\n  const { zEnv, setZenv } = props;\n\n  const handleAttack = (e) => {\n    setZenv({ ...zEnv, attack: e.target.value });\n    console.log(zEnv);\n  };\n\n  const handleDecay = (e) => {\n    setZenv({ ...zEnv, decay: e.target.value });\n    console.log(zEnv);\n  };\n\n  const handleSustain = (e) => {\n    setZenv({ ...zEnv, sustain: e.target.value });\n    console.log(zEnv);\n  };\n\n  const handleRelease = (e) => {\n    setZenv({ ...zEnv, release: e.target.value });\n    console.log(zEnv);\n  };\n\n  function handleResetEnvelop() {\n    setZenv({\n      ...zEnv,\n      attack: 0.9,\n      decay: 0.4,\n      sustain: 0.01,\n      release: 1.4,\n    });\n  }\n\n  return (\n    <div className=\"envelop control\">\n      <div className=\"attackSlider\">\n        <p>Attack</p>\n        <input\n          type=\"range\"\n          min={0.1}\n          max={2.1}\n          step=\"0.2\"\n          value={zEnv.attack}\n          onChange={handleAttack}\n        />\n      </div>\n      <div className=\"decaySlider\">\n        <p>Decay</p>\n        <input\n          type=\"range\"\n          min={0.1}\n          max={2.1}\n          step=\"0.2\"\n          value={zEnv.decay}\n          onChange={handleDecay}\n        />\n      </div>\n      <div className=\"sustainSlider\">\n        <p>Sustain</p>\n        <input\n          type=\"range\"\n          min={0.1}\n          max={2.1}\n          step=\"0.2\"\n          value={zEnv.sustain}\n          onChange={handleSustain}\n        />\n      </div>\n      <div className=\"releaseSlider\">\n        <p>Release</p>\n        <input\n          onChange={handleRelease}\n          type=\"range\"\n          min={0.1}\n          max={10.1}\n          step=\"0.5\"\n          value={zEnv.release}\n        />\n      </div>\n      <button className=\"reset-button\" onClick={handleResetEnvelop}>\n        Reset envelope\n      </button>\n    </div>\n  );\n};\n\nexport default ZenvelopControllers;\n","import React, { Fragment } from \"react\";\n\nconst ZvibratoController = (props) => {\n  const { zVib, setZvib } = props;\n  const handleVibrato = (e) => {\n    setZvib({ ...zVib, depth: e.target.value });\n  };\n  return (\n    <Fragment>\n      <div className=\"vibrato control\">\n        <p>Vibrato</p>\n        <input\n          type=\"range\"\n          min={0}\n          max={1}\n          value={zVib.depth}\n          onChange={handleVibrato}\n          step=\"0.1\"\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZvibratoController;\n","import React, { Fragment } from \"react\";\n\nconst ZphaserController = (props) => {\n  const { zPhs, setZphs } = props;\n  const handlePhaser = (e) => {\n    setZphs({ ...zPhs, stages: e.target.value });\n  };\n  return (\n    <Fragment>\n      <div className=\"phaser control\">\n        <p>Phaser</p>\n        <input\n          type=\"range\"\n          min={1}\n          max={100}\n          value={zPhs.stages}\n          onChange={handlePhaser}\n          step=\"1\"\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ZphaserController;\n","import React from \"react\";\nimport ZOctaveController from \"./ZOctaveController\";\nimport ZReleaseController from \"./ZreleaseControler\";\nimport ZvolumeControler from \"./ZvolumeController\";\nimport ZwaveFormController from \"./ZwaveFormController\";\nimport ZreverbController from \"./ZreverbController\";\nimport ZdelayController from \"./ZdelayController\";\nimport ZenvelopControllers from \"./evnelop_Controllers/ZenvelopController\";\nimport ZvibratoController from \"./ZvibratoController\";\nimport ZphaserController from \"./ZphaserController\";\n\n/*\n   This component contains all the parameters controller for this Synth\n   (volume, Release, ocatver, oscillator, Reverb, Delay, Vibrato, Phaser, Envelop)\n\n*/\nconst Zcontrols = (props) => {\n  const {\n    zVol,\n    setZvol,\n    zRel,\n    setZrel,\n    zOct,\n    setZoct,\n    setZosc,\n    zRev,\n    setZrev,\n    zDel,\n    setZdel,\n    zEnv,\n    setZenv,\n    zDefault,\n    setZdefault,\n    modalIsOpen,\n    setModalOpen,\n    zVib,\n    setZvib,\n    zPhs,\n    setZphs,\n  } = props;\n\n  return (\n    <div className=\"controllers\">\n      <div className=\"controlArea\">\n        <h5>Main Settings</h5>\n        <ZvolumeControler zVol={zVol} setZvol={setZvol} />\n        <ZReleaseController zRel={zRel} setZrel={setZrel} />\n        <ZOctaveController zOct={zOct} setZoct={setZoct} />\n        <ZwaveFormController setZosc={setZosc} />\n      </div>\n      <div className=\"controlArea\">\n        <h5>Envelope</h5>\n        <ZenvelopControllers\n          zEnv={zEnv}\n          setZenv={setZenv}\n          zDefault={zDefault}\n          setZdefault={setZdefault}\n          modalIsOpen={modalIsOpen}\n          setModalOpen={setModalOpen}\n        />\n      </div>\n      <div className=\"controlArea\">\n        <h5>Effects</h5>\n        <ZreverbController zRev={zRev} setZrev={setZrev} />\n        <ZdelayController setZdel={setZdel} zDel={zDel} />\n        <ZvibratoController zVib={zVib} setZvib={setZvib} />\n        <ZphaserController zPhs={zPhs} setZphs={setZphs} />\n      </div>\n    </div>\n  );\n};\n\nexport default Zcontrols;\n","import React from \"react\";\nimport * as Tone from \"tone\"; // importing synths/ effects /methods from Tone.js framewark\nimport Zkeys from \"./Zkeys\";\nimport Zcontrols from \"./controlers/Zcontrols\";\n\n/* this components contains the imported synth and effects from Tone.js \n   and two components that represents the main structure for our Synth (Zkeys.js & zControls.js)\n*/\nconst Zsynth = (props) => {\n  const {\n    zNotes,\n    zOct,\n    setZoct,\n    zRel,\n    setZrel,\n    zVol,\n    setZvol,\n    setZosc,\n    zRev,\n    setZrev,\n    zDel,\n    setZdel,\n    zEnv,\n    setZenv,\n    zOsc,\n    zDefault,\n    setZdefault,\n    zVib,\n    setZvib,\n    zPhs,\n    setZphs,\n  } = props;\n\n  // function sets the synth params to the default when the user clicks on \"Reset all parameters\" button\n\n  const handleResetParameters = () => {\n    const {\n      octave,\n      oscillator,\n      reverb,\n      volume,\n      delay,\n      release,\n      vibrato,\n      phaser,\n    } = zDefault;\n    setZoct(octave);\n    setZosc(oscillator);\n    setZrev(reverb);\n    setZvol(volume);\n    setZdel(delay);\n    setZrel(release);\n    setZvib(vibrato);\n    setZphs(phaser.stages);\n  };\n\n  // =============== Adding Effects =================\n\n  // Delay\n\n  let zDelay = new Tone.FeedbackDelay({\n    maxDelay: zDel.maxDelay,\n    feedback: zDel.feedback,\n  }).toMaster();\n\n  // Reverb\n\n  let zReverb = new Tone.JCReverb({\n    roomSize: props.zRev.roomSize,\n  }).toMaster();\n\n  // Pahser\n\n  let Zphaser = new Tone.Phaser({\n    frequency: zPhs.frequency,\n    octaves: zPhs.octaves,\n    stages: zPhs.stages,\n    Q: zPhs.Q,\n    baseFrequency: zPhs.baseFrequency,\n  }).toMaster();\n\n  // Vibrato\n\n  let Zvibrato = new Tone.Vibrato({\n    frequency: zVib.frequency,\n    depth: zVib.depth,\n  }).toMaster();\n\n  /*\n   * assigning the Imported Synth to a the variable zsynth\n   * assigning values to its oscillator & envelop from the state\n   * connect the the effects to the synth using .chain() methode\n   */\n\n  let zsynth = new Tone.Synth({\n    volume: zVol,\n    oscillator: { type: zOsc },\n    envelope: {\n      attack: zEnv.attack,\n      decay: zEnv.decay,\n      sustain: zEnv.sustain,\n      release: zEnv.release,\n    },\n  }).chain(zDelay, Zvibrato, Zphaser, zReverb);\n\n  return (\n    <div className=\"zsynth\" id=\"zSynth\">\n      <Zcontrols\n        zDel={zDel}\n        setZdel={setZdel}\n        zVol={zVol}\n        setZvol={setZvol}\n        zRev={zRev}\n        setZrev={setZrev}\n        zRel={zRel}\n        setZrel={setZrel}\n        zOct={zOct}\n        setZoct={setZoct}\n        setZosc={setZosc}\n        zEnv={zEnv}\n        setZenv={setZenv}\n        zDefault={zDefault}\n        setZdefault={setZdefault}\n        zVib={zVib}\n        setZvib={setZvib}\n        zPhs={zPhs}\n        setZphs={setZphs}\n      />\n      <Zkeys zNotes={zNotes} zsynth={zsynth} zRel={zRel} zOct={zOct} />\n      <button onClick={handleResetParameters} className=\"resetParams\">\n        Reset all parameters\n      </button>\n    </div>\n  );\n};\n\nexport default Zsynth;\n","import React, { Fragment, useState } from \"react\";\nimport Zsynth from \"./components/Zsynth\";\nimport notes from \"./notes.json\"; // array of objects have notes/ classes names / keyboard-trigger keys\nimport Zdefault from \"./defaultParameters.json\"; // default values for all synth params\n\nconst App = () => {\n  const {\n    oscillator,\n    envelop,\n    delay,\n    release,\n    reverb,\n    volume,\n    octave,\n    vibrato,\n    phaser,\n  } = Zdefault;\n\n  // state getting its values from defaultParameters.json\n\n  const [zDefault, setZdefault] = useState(Zdefault),\n    [zNotes, setZnotes] = useState(notes),\n    [zOsc, setZosc] = useState(oscillator),\n    [zEnv, setZenv] = useState(envelop),\n    [zVol, setZvol] = useState(volume),\n    [zOct, setZoct] = useState(octave),\n    [zRel, setZrel] = useState(release),\n    [zRev, setZrev] = useState(reverb),\n    [zDel, setZdel] = useState(delay),\n    [zVib, setZvib] = useState(vibrato),\n    [zPhs, setZphs] = useState(phaser);\n\n  return (\n    <Fragment>\n      <h1>Zamagana</h1>\n      <h3>\n        Browser-synth built with{\" \"}\n        <a href=\"https://tonejs.github.io/\" target=\"_blank\">\n          Tone.js{\" \"}\n        </a>\n        and <a href=\"https://reactjs.org/\">React.js</a>\n      </h3>\n      <Zsynth\n        zDefault={zDefault}\n        setZdefault={setZdefault}\n        zNotes={zNotes}\n        setZnotes={setZnotes}\n        zOsc={zOsc}\n        setZosc={setZosc}\n        zEnv={zEnv}\n        setZenv={setZenv}\n        zVol={zVol}\n        setZvol={setZvol}\n        zOct={zOct}\n        setZoct={setZoct}\n        zRel={zRel}\n        setZrel={setZrel}\n        zRev={zRev}\n        setZrev={setZrev}\n        zDel={zDel}\n        setZdel={setZdel}\n        zVib={zVib}\n        setZvib={setZvib}\n        zPhs={zPhs}\n        setZphs={setZphs}\n      />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./scss/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}